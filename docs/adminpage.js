/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/adminpage.js":
/*!**************************!*\
  !*** ./src/adminpage.js ***!
  \**************************/
/***/ (() => {

eval("let container = document.getElementById(\"containerAdmin\");\r\n//let buttonAddCuratedPlaylist = document.getElementById(\"buttonAddCuratedPlaylist\");\r\n//let buttonAddGeneratedPlaylist = document.getElementById(\"buttonAddGeneratedPlaylist\");\r\n//let buttonRemovePlaylist = document.getElementById(\"buttonDeletePlaylist\");\r\n\r\n\r\n/*\r\nbuttonAddCuratedPlaylist.addEventListener(\"click\", function () {\r\n    container.innerHTML = \"\";\r\n    let html = `<form>\r\n<label for=\"playlistID\">PlaylistID:</label>\r\n<input type=\"text\" id=\"playlistID\" name=\"playlistID\"><br>\r\n<label for=\"title\">Title:</label>\r\n<input type=\"text\" id=\"title\" name=\"title\"><br>\r\n<label for=\"description\">description:</label>\r\n<input type=\"text\" id=\"description\" name=\"description\"><br>\r\n<label for=\"imageurl\">Image url:</label>\r\n<input type=\"text\" id=\"imageurl\" name=\"imageurl\">\r\n<br><br>\r\n<button id=\"formbuttonAddPlaylist\" class=\"button-3\" role=\"button\">Add playlist</button>\r\n</form>`\r\n\r\n    container.innerHTML = html;\r\n    let addPlaylistButton = document.getElementById(\"formbuttonAddPlaylist\");\r\n    addPlaylistButton.addEventListener(\"click\", function (e) {\r\n        e.preventDefault();\r\n        if (addPlaylistButton.innerHTML != \"Added!\") {\r\n            let playlistID = document.getElementById(\"playlistID\");\r\n            let title = document.getElementById(\"title\");\r\n            let description = document.getElementById(\"description\");\r\n            let imageurl = document.getElementById(\"imageurl\");\r\n            addCuratedPlaylist(playlistID, title, description, imageurl);\r\n\r\n            addPlaylistButton.innerHTML = \"Added!\"\r\n        }\r\n\r\n    })\r\n})\r\n\r\nbuttonAddGeneratedPlaylist.addEventListener(\"click\", function () {\r\n    container.innerHTML = \"\";\r\n    let html = `<form>\r\n<label for=\"playlistID\">PlaylistID:</label>\r\n<input type=\"text\" id=\"playlistID\" name=\"playlistID\"><br>\r\n<label for=\"title\">Title:</label>\r\n<input type=\"text\" id=\"title\" name=\"title\"><br>\r\n<label for=\"description\">description:</label>\r\n<input type=\"text\" id=\"description\" name=\"description\"><br>\r\n<label for=\"imageurl\">Image url:</label>\r\n<input type=\"text\" id=\"imageurl\" name=\"imageurl\"><br>\r\n<label for=\"mainCategory\">mainCategory:</label>\r\n<input type=\"text\" id=\"mainCategory\" name=\"mainCategory\"><br>\r\n<label for=\"score\">Score:</label>\r\n<input type=\"text\" id=\"score\" name=\"score\">\r\n<br><br>\r\n<button id=\"formbuttonAddPlaylist\" class=\"button-3\" role=\"button\">Add playlist</button>\r\n</form>`\r\n    container.innerHTML = html;\r\n    let addPlaylistButton = document.getElementById(\"formbuttonAddPlaylist\");\r\n    addPlaylistButton.addEventListener(\"click\", function (e) {\r\n\r\n        e.preventDefault();\r\n\r\n\r\n        if (addPlaylistButton.innerHTML != \"Added!\") {\r\n            let playlistID = document.getElementById(\"playlistID\");\r\n            let title = document.getElementById(\"title\");\r\n            let description = document.getElementById(\"description\");\r\n            let imageurl = document.getElementById(\"imageurl\");\r\n            let mainCategory = document.getElementById(\"mainCategory\");\r\n            let score = document.getElementById(\"score\");\r\n            addGeneratedPlaylist(playlistID, title, description, imageurl, mainCategory, score);\r\n\r\n            addPlaylistButton.innerHTML = \"Added!\"\r\n        }\r\n    })\r\n})\r\n*/\r\n/*\r\nbuttonRemovePlaylist.addEventListener(\"click\", function () {\r\n    container.innerHTML = \"\";\r\n    let html = `<form>\r\n    <label for=\"playlistID\">PlaylistID:</label>\r\n    <input type=\"text\" id=\"playlistID\" name=\"playlistID\"><br>\r\n    <br><br>\r\n    <button id=\"formbuttonDeletePlaylist\" class=\"button-3\" role=\"button\">Delete playlist</button>\r\n    \r\n    </form>`;\r\n    container.innerHTML = html;\r\n\r\n    let deleteButton = document.getElementById(\"formbuttonDeletePlaylist\");\r\n    deleteButton.addEventListener(\"click\", function () {\r\n        console.log(\"Delete playlist\");\r\n    })\r\n})\r\n*/\r\n\r\nasync function addCuratedPlaylist(playlistID, title, description, imageurl) {\r\n    fetch(`https://courseprojectwebii.herokuapp.com/postNewCuratedPlaylist`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            playlistID: playlistID.value,\r\n            title: title.value,\r\n            description: description.value,\r\n            imageurl: imageurl.value\r\n        })\r\n\r\n    }).then(response => {\r\n        return response.json()\r\n    }).then(data => {\r\n\r\n    })\r\n}\r\n\r\nasync function addGeneratedPlaylist(playlistID, title, description, imageurl, mainCategory, score) {\r\n    fetch(`https://courseprojectwebii.herokuapp.com/postNewGeneratedPlaylist`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            playlistID: playlistID.value,\r\n            title: title.value,\r\n            description: description.value,\r\n            imageurl: imageurl.value,\r\n            mainCategory: mainCategory.value,\r\n            score: score.value\r\n        })\r\n\r\n    }).then(response => {\r\n        return response.json()\r\n    }).then(data => {\r\n\r\n    })\r\n}\n\n//# sourceURL=webpack://web2-frontend-casdebruijnehb/./src/adminpage.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/adminpage.js"]();
/******/ 	
/******/ })()
;