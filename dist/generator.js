/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/apiCall.js":
/*!************************!*\
  !*** ./src/apiCall.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authenticateUser\": () => (/* binding */ authenticateUser),\n/* harmony export */   \"createPlaylistForUser\": () => (/* binding */ createPlaylistForUser),\n/* harmony export */   \"requestUserAuth\": () => (/* binding */ requestUserAuth)\n/* harmony export */ });\n//For spotify API call\r\n\r\n\r\n//EXTRA Authorization Spotify variabelen\r\n\r\nfunction authenticateUser(redirectlocation) {\r\n    //let href = window.location.href;\r\n    //let pos = href.indexOf('/', 7);\r\n    //let beginhref = href.substring(0, pos + 1);\r\n    let beginhref = \"https://ehb-mct.github.io/web2-frontend-CasdeBruijnEHB/\"\r\n    if (redirectlocation == 'spotifyLibrary') {\r\n        console.log(\"Naar library page\");\r\n        redirect_url_afterlogin = `${beginhref}playlistLibrary.html`;\r\n\r\n    } else {\r\n        console.log(\"Naar generator page\")\r\n        redirect_url_afterlogin = `${beginhref}playlistGenerator.html`;\r\n\r\n    }\r\n    getToken()\r\n    requestUserAuth();\r\n}\r\nfunction createPlaylistForUser(playlistData) {\r\n    console.log(\"Click create\")\r\n    getReturnAccessToken(window.location.hash);\r\n    createPlaylist(token, userId, parametersArray[0], playlistData);\r\n}\r\n\r\nlet redirect_url_afterlogin = \"http://127.0.0.1:5501/playlistGenerator.html\";\r\n//const scopes = [\"playlist-modify-public\", \"playlist-modify-private\"]; //playlist-modify-public voor follow a playlist\r\nconst scopes = [\"playlist-modify-public\", \"playlist-modify-private\", \"user-read-private\", \"user-read-email\", \"ugc-image-upload\"]; //Scopes met get Current user data (ID)\r\nconst spotify_authorize_endpoint = \"https://accounts.spotify.com/authorize\";\r\nconst space_delimiter = \"%20\";\r\nconst scopes_url_parm = scopes.join(space_delimiter);\r\n\r\n\r\n//APP Spotify\r\n//General declaraties\r\nconst clientId = '3b5e1281fd2a4f4a85feb85c9326513a';\r\nconst clientSecret = '9e9b58417cdf4969a3f4e7885765f7f9';\r\nlet token = \"\";\r\nlet userId = \"119096959\"; //Test user ID, van mij (Cas)\r\nlet playlistIdFollow = \"37i9dQZF1DX1kfybUJZB6S\";\r\n\r\nlet createdPlaylistID;\r\n\r\n\r\n\r\n\r\ngetToken()\r\nasync function getToken() {\r\n    const result = await fetch('https://accounts.spotify.com/api/token', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n        },\r\n        body: 'grant_type=client_credentials'\r\n    });\r\n    const data = await result.json();\r\n    //console.log(\"data\", data);\r\n    token = data.access_token;\r\n}\r\n\r\n\r\n//========================================================================\r\n//AUTHENTICATION USER\r\n//========================================================================\r\nfunction requestUserAuth(requestType) {\r\n    //Er wordt een request type meegegeven voor te weten welke functie dan moet worden opgeroepen\r\n    //Kan voor te volgen (FollowPlaylist), voor te maken zijn (createPlaylist)\r\n    let url = `${spotify_authorize_endpoint}?client_id=${clientId}&redirect_uri=${redirect_url_afterlogin}&scope=${scopes_url_parm}&response_type=token&show_dialog=true`;\r\n    window.location.replace(url);\r\n    console.log(\"click login\");\r\n\r\n\r\n\r\n    if (window.location.hash) {\r\n        getReturnAccessToken(window.location.hash);\r\n    }\r\n\r\n}\r\n\r\nlet parametersArray = [];\r\nasync function getReturnAccessToken(url) {\r\n    console.log(\"Return access\");\r\n    const stringNaHashtag = url.substring(1);\r\n    const paramatersURL = stringNaHashtag.split('&');\r\n    for (let i = 0; i < paramatersURL.length; i++) {\r\n        let parasplit = paramatersURL[i].split(\"=\");\r\n        //Eerst splitten op basis van de \"=\" teken.\r\n        //Daarna ENKEL de waarden in de array zetten.\r\n        //In deze volgorde; eerst access_token, daarna token_type, daarna expires_in\r\n        parametersArray.push(parasplit[1]);\r\n    }\r\n}\r\n\r\n\r\n//========================================================================\r\n//Following & liking playlists, adding tracks & covers\r\n//========================================================================\r\nasync function followPlaylist(token, playlistID, accesstoken) {\r\n    console.log(\"Click follow!\", accesstoken);\r\n\r\n    //Like playlist\r\n    const result2 = await fetch(`https://api.spotify.com/v1/playlists/${playlistID}/followers`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + accesstoken\r\n        }\r\n    });\r\n    //rare error? \r\n    const data2 = await result2.json();\r\n    console.log(\"Follow playlist\", data2);\r\n}\r\n\r\n\r\n//VOOR PLAYLIST TOE TE VOEGEN. EERST PROBEREN GEWOON TE VOLGEN\r\n\r\nasync function createPlaylist(token, userID, accessToken, playlistData) {\r\n\r\n    console.log(\"Create playlist, data:\", playlistData.description)\r\n    //Create playlist\r\n    const result = await fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + accessToken\r\n        },\r\n        body: JSON.stringify({\r\n            \"name\": playlistData.title,\r\n            \"description\": playlistData.description,\r\n            \"public\": true\r\n        })\r\n    });\r\n    const data = await result.json();\r\n    let playlistId = data.id;\r\n    //this.createdPlaylistID = data.id;\r\n    console.log(\"Create\", data);\r\n\r\n    //Get playlistItems\r\n    getPlaylistItems(accessToken, userID, playlistData, playlistId);\r\n\r\n\r\n\r\n    //Add cover - Werkt nog niet\r\n    addCover(accessToken, playlistId, userID, playlistData);\r\n}\r\nasync function getPlaylistItems(accesstoken, userID, playlistData, idNewPlaylist) {\r\n    //here we need to get the tracks out of the spotify playlists, to add them to the newly created playlists\r\n    const result2 = await fetch(`https://api.spotify.com/v1/playlists/${playlistData.playlistID}/tracks`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + accesstoken\r\n        }\r\n    });\r\n    const data2 = await result2.json();\r\n    console.log(\"Playlist items, id first track\", data2.items[1].track.id);\r\n    let arrayTrackIds = [];\r\n    data2.items.forEach((element, index) => {\r\n        arrayTrackIds.push('spotify:track:' + element.track.id);\r\n    })\r\n    console.log(arrayTrackIds);\r\n\r\n    //Add tracks\r\n    addTracks(accesstoken, idNewPlaylist, userID, arrayTrackIds);\r\n\r\n}\r\n\r\nasync function addCover(accessToken, playlistId, userID, playlistData) {\r\n    const result2 = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/images`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + accessToken\r\n        },\r\n        body: playlistData.imageurl\r\n\r\n    });\r\n    // const data2 = await result2.json();\r\n    //console.log(\"FOto\", data2);\r\n}\r\n\r\n\r\nasync function addTracks(accessToken, playlistId, userID, trackData) {\r\n    const result = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + accessToken\r\n        },\r\n        body: JSON.stringify({\r\n            \"uris\": trackData\r\n        })\r\n    });\r\n    const data = await result.json();\r\n    console.log(\"Create\", data);\r\n}\n\n//# sourceURL=webpack://web2-frontend-casdebruijnehb/./src/apiCall.js?");

/***/ }),

/***/ "./src/loader.js":
/*!***********************!*\
  !*** ./src/loader.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loaderAnimation\": () => (/* binding */ loaderAnimation),\n/* harmony export */   \"generatorAnimation\": () => (/* binding */ generatorAnimation)\n/* harmony export */ });\nfunction loaderAnimation() {\r\n    window.addEventListener('load', (event) => {\r\n        console.log('page is fully loaded');\r\n        generatorAnimation();\r\n    });\r\n}\r\nloaderAnimation();\r\n\r\nfunction generatorAnimation() {\r\n    let wrapper = document.getElementById(\"loader-wrapper\");\r\n    let html = `\r\n    <span class = \"loader\" >\r\n    <span class = \"loader-inner\" >\r\n    </span> \r\n    </span>`;\r\n    wrapper.style.display = \"flex\";\r\n    wrapper.style.opacity = 1;\r\n    wrapper.innerHTML = html;\r\n    fadeEffect(wrapper);\r\n}\r\n\r\n\r\nfunction fadeEffect(wrapper) {\r\n    var fade = setInterval(function () {\r\n        if (!wrapper.style.opacity) {\r\n            wrapper.style.opacity = 1;\r\n        }\r\n        if (wrapper.style.opacity > 0) {\r\n            wrapper.style.opacity -= 0.1;\r\n        } else {\r\n            clearInterval(fade);\r\n        }\r\n    }, 200);\r\n\r\n\r\n    var fadeEffectTwee = setTimeout(function () {\r\n        wrapper.style.display = \"none\";\r\n    }, 300);\r\n}\n\n//# sourceURL=webpack://web2-frontend-casdebruijnehb/./src/loader.js?");

/***/ }),

/***/ "./src/playlistGenerator.js":
/*!**********************************!*\
  !*** ./src/playlistGenerator.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _loader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loader.js */ \"./src/loader.js\");\n/* harmony import */ var _apiCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiCall.js */ \"./src/apiCall.js\");\n\r\n\r\nlet containerImages = document.getElementById(\"GeneratorContainer\");\r\nlet progressBarClicks;\r\nlet calculateScore;\r\nlet progressBarCircles = document.getElementsByClassName(\"progressItems\");\r\nlet generatedPlaylistData;\r\n\r\n\r\n\r\n//This variable is used to save the urls of the chosen images. In order to prohibit duplicates\r\nlet chosenImagesUrls = [];\r\n\r\nconst playlistGenerator = {\r\n    category_images: [{\r\n            imageUrl: \"../Images/Generator/CategoryPictures/One.png\",\r\n            mainCategory: \"purpleBlackRed\"\r\n        }, {\r\n            imageUrl: \"../Images/Generator/CategoryPictures/Two.png\",\r\n            mainCategory: \"purpleBlackRed\"\r\n        }, {\r\n            imageUrl: \"../Images/Generator/CategoryPictures/Three.png\",\r\n            mainCategory: \"orangeYellowPink\"\r\n        },\r\n        {\r\n            imageUrl: \"../Images/Generator/CategoryPictures/Four.png\",\r\n            mainCategory: \"orangeYellowPink\"\r\n        },\r\n        {\r\n            imageUrl: \"../Images/Generator/CategoryPictures/Five.png\",\r\n            mainCategory: \"brownCreamGreenBlue\"\r\n        }\r\n    ],\r\n    playlist_brownCreamGreenBlue: [{\r\n        imageUrl: \"../Images/Generator/brownCreamGreenBlue/Funky.png\",\r\n        score: \"1\",\r\n        mainCategory: \"brownCreamGreenBlue\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/brownCreamGreenBlue/Pharrel.png\",\r\n        score: \"3\",\r\n        mainCategory: \"brownCreamGreenBlue\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/brownCreamGreenBlue/Skate.png\",\r\n        score: \"3\",\r\n        mainCategory: \"brownCreamGreenBlue\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/brownCreamGreenBlue/VHS.png\",\r\n        score: \"5\",\r\n        mainCategory: \"brownCreamGreenBlue\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/brownCreamGreenBlue/Vintage.png\",\r\n        score: \"2\",\r\n        mainCategory: \"brownCreamGreenBlue\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/brownCreamGreenBlue/Brug.png\",\r\n        score: \"8\",\r\n        mainCategory: \"brownCreamGreenBlue\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/brownCreamGreenBlue/Lights.png\",\r\n        score: \"13\",\r\n        mainCategory: \"brownCreamGreenBlue\"\r\n    }],\r\n    playlist_orangeYellowPink: [{\r\n            imageUrl: \"../Images/Generator/OrangeYellowPink/Drinking.png\",\r\n            score: \"1\",\r\n            mainCategory: \"orangeYellowPink\"\r\n        }, {\r\n            imageUrl: \"../Images/Generator/OrangeYellowPink/Oranges.png\",\r\n            score: \"3\",\r\n            mainCategory: \"orangeYellowPink\"\r\n        },\r\n        {\r\n            imageUrl: \"../Images/Generator/OrangeYellowPink/Heart.png\",\r\n            score: \"8\",\r\n            mainCategory: \"orangeYellowPink\"\r\n        }, {\r\n            imageUrl: \"../Images/Generator/OrangeYellowPink/Kersen.png\",\r\n            score: \"7\",\r\n            mainCategory: \"orangeYellowPink\"\r\n        }\r\n    ],\r\n    playlist_purpleBlackRed: [{\r\n        imageUrl: \"../Images/Generator/PurpleBlackRed/CD.png\",\r\n        score: \"7\",\r\n        mainCategory: \"purpleBlackRed\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/PurpleBlackRed/Distorted.png\",\r\n        score: \"5\",\r\n        mainCategory: \"purpleBlackRed\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/PurpleBlackRed/Distorter.png\",\r\n        score: \"10\",\r\n        mainCategory: \"purpleBlackRed\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/PurpleBlackRed/Futuristic.png\",\r\n        score: \"4\",\r\n        mainCategory: \"purpleBlackRed\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/PurpleBlackRed/Space.png\",\r\n        score: \"8\",\r\n        mainCategory: \"purpleBlackRed\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/PurpleBlackRed/Motor.png\",\r\n        score: \"2\",\r\n        mainCategory: \"purpleBlackRed\"\r\n    }, {\r\n        imageUrl: \"../Images/Generator/PurpleBlackRed/Stronger.png\",\r\n        score: \"1\",\r\n        mainCategory: \"purpleBlackRed\"\r\n    }],\r\n    initiateGenerator() {\r\n        //De generator wordt hier aangezet, allereerst beginnen we met een foto die ze in een bepaalde categorie zal plaatsen.\r\n        //Eerst wordt er een random foto genomen.\r\n        let randomIndexOne = Math.floor(Math.random() * playlistGenerator.category_images.length)\r\n        let randomIndexTwo = Math.floor(Math.random() * playlistGenerator.category_images.length)\r\n\r\n        while (randomIndexOne == randomIndexTwo) {\r\n            randomIndexTwo = Math.floor(Math.random() * playlistGenerator.category_images.length)\r\n        }\r\n\r\n        containerImages.innerHTML = `\r\n        <img class=\"generatorImages\" id=\"${playlistGenerator.category_images[randomIndexOne].mainCategory}\" src=${playlistGenerator.category_images[randomIndexOne].imageUrl} alt=\"Image one\">\r\n        <img class=\"generatorImages\" id=\"${playlistGenerator.category_images[randomIndexTwo].mainCategory}\" src=${playlistGenerator.category_images[randomIndexTwo].imageUrl} alt=\"Image Two\">\r\n        `;\r\n\r\n        //Link een button & actie aan elke foto.\r\n        generatorImageButtons();\r\n    },\r\n    updateHTML(maincategory) {\r\n\r\n        let randomIndexOne;\r\n        let randomIndexTwo;\r\n        let html;\r\n\r\n        //Hier worden de URLS van de images uit de juiste category in een array geplaatst.\r\n        //Ze worden er in geplaatst zodat er op een makkelijke manier duplicaten verwijderd kunnen worden.\r\n        if (chosenImagesUrls.length <= 1) {\r\n            chosenImagesUrls = [];\r\n            for (let i = 0; i < playlistGenerator[`playlist_${maincategory}`].length; i++) {\r\n                chosenImagesUrls.push(playlistGenerator[`playlist_${maincategory}`][i].imageUrl);\r\n            }\r\n        }\r\n\r\n\r\n        //Random images worden gekozen\r\n        randomIndexOne = Math.floor(Math.random() * chosenImagesUrls.length);\r\n        randomIndexTwo = Math.floor(Math.random() * chosenImagesUrls.length);\r\n        //Checken of het dezelfde zouden zijn\r\n        while (randomIndexOne == randomIndexTwo) {\r\n            randomIndexTwo = Math.floor(Math.random() * chosenImagesUrls.length)\r\n        }\r\n\r\n        html = `\r\n        <img class=\"generatorImages\" id=\"${maincategory}\" src=\"${chosenImagesUrls[randomIndexOne]}\" alt=\"Image one\">\r\n        <img class=\"generatorImages\" id=\"${maincategory}\" src=\"${chosenImagesUrls[randomIndexTwo]}\" alt=\"Image Two\">`;\r\n\r\n        //Nu moeten de foto urls uit de array verwijderd worden.\r\n        //eerste kan gewoon met splice maar daarna worden de indexes veranderd dus moet er een -1 of +1 bijkomen.\r\n        chosenImagesUrls.splice(randomIndexOne, 1)\r\n        if (randomIndexOne < randomIndexTwo) {\r\n            chosenImagesUrls.splice(randomIndexTwo - 1, 1)\r\n        } else {\r\n            chosenImagesUrls.splice(randomIndexTwo + 1, 1)\r\n        }\r\n        //Loading animatie \r\n        _loader_js__WEBPACK_IMPORTED_MODULE_0__.generatorAnimation();\r\n        //Toevoegen HTML en functies toewijzen aan de images\r\n        containerImages.innerHTML = html;\r\n        generatorImageButtons(randomIndexOne, randomIndexTwo);\r\n    }\r\n}\r\n\r\ninit();\r\n\r\nfunction init() {\r\n    //Deze variabelen wordt gebruikt voor de eerstvolgende progressbar circle te kiezen & opvullen.\r\n    //Check if authentication is complete\r\n    if (window.location.hash) {\r\n        console.log(\"authenticated\")\r\n        calculateScore = 0;\r\n        progressBarClicks = 1;\r\n        getPlaylists();\r\n        playlistGenerator.initiateGenerator();\r\n    } else {\r\n        console.log(\"Not Authenticated\");\r\n        _apiCall_js__WEBPACK_IMPORTED_MODULE_1__.authenticateUser('spotifyGenerator');\r\n    }\r\n\r\n}\r\nasync function getPlaylists() {\r\n    console.log(\"INIT\");\r\n    await fetch('https://courseprojectwebii.herokuapp.com/getGeneratedPlaylists').then(response => {\r\n        return response.json();\r\n    }).then(data => {\r\n        //challengesList = data;\r\n        console.log(\"Fetch this: \", data);\r\n        generatedPlaylistData = data;\r\n    })\r\n}\r\n\r\nfunction generatorImageButtons() {\r\n    //Eerst de foto's ophalen en gebruiken als knop. Hier wordt functie aan vastgebonden bij klik event.\r\n    let imageButtons = document.getElementsByClassName(\"generatorImages\");\r\n    for (let i = 0; i < imageButtons.length; i++) {\r\n        imageButtons[i].addEventListener(\"click\", function (e) {\r\n            //Progressbar circeltjes aanpassen op klik event.\r\n            if (progressBarClicks < 3) {\r\n                progressBarCircles[progressBarClicks].classList.add(\"active\");\r\n                progressBarClicks++;\r\n\r\n                //Functie aangeroepen die de playlist score berekend.\r\n                generateScore(e.target);\r\n                //calculateScore+= playlistGenerator[`playlist_${e.target.id}`][randomIndexOne].score\r\n                playlistGenerator.updateHTML(e.target.id);\r\n            } else if (progressBarClicks >= 3) {\r\n                //Wanneer de progressbar vol is = de quiz afgelopen en mag het resultaat weergeven worden.\r\n                generateScore(e.target);\r\n                fillResultPage(e.target.id);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction generateScore(elementID) {\r\n    playlistGenerator[`playlist_${elementID.id}`].forEach(element => {\r\n        //Voor de juiste imagescore te pakken, wordt de url vergeleken met die in de arrays\r\n        //Als ze een match vindt, wordt de score er van genomen\r\n        //De website url is wel aangepast dus daarom moest er een substring worden toegevoegd.\r\n        let urlTarget = elementID.src;\r\n        urlTarget = urlTarget.substring(urlTarget.indexOf(\"Images\") - 1);\r\n        let newUrl = \".\" + urlTarget;\r\n        if (newUrl === element.imageUrl) {\r\n            console.log(\"YEP\", element.imageUrl)\r\n            console.log(\"YEP\", element.score)\r\n            calculateScore += parseInt(element.score);\r\n        }\r\n    });\r\n}\r\n\r\nfunction fillResultPage(category) {\r\n    console.log(\"Fill result\");\r\n    let chosenPlaylist = [];\r\n    generatedPlaylistData.forEach((element, index) => {\r\n        if (element.mainCategory === category.toLowerCase()) {\r\n            chosenPlaylist.push(element);\r\n        }\r\n    })\r\n    //Dan sorteren adhv de score van de playlists.\r\n    chosenPlaylist.sort(function (a, b) {\r\n        return a.score - b.score;\r\n    });\r\n\r\n    //Hier gaan we kijken of de score groter is dan de score van de playlist. Indien niet meer, die score en dus playlist gebruiken!\r\n    let oneChosenPlaylist = chosenPlaylist.find(x => x.score >= calculateScore);\r\n\r\n\r\n    console.log(\"De chosen playlists\", chosenPlaylist);\r\n    console.log(\"De calculatd value: \", calculateScore)\r\n    console.log(\"De chosen playlist;\", oneChosenPlaylist);\r\n\r\n    //window.location.replace(\"./playlistResultPage.html\");\r\n\r\n    let containerResult = document.getElementById(\"generatorPage\");\r\n    let titlepage = document.getElementById(\"titleGenerator\");\r\n    let html = `\r\n    <div id=\"container_playlist_cooking\">\r\n    <img id=\"playlistResultImages\" src=\"data:image/jpeg;base64,${oneChosenPlaylist.imageurl}\" alt=\"\">\r\n    <div id=\"textContentPlaylistResult\">\r\n        <h2 id=\"librarySubtitle\">${oneChosenPlaylist.title}</h2>\r\n        <p id=\"curatedBy\">${oneChosenPlaylist.description}</p>\r\n        <p id=\"playlistDescription\">${oneChosenPlaylist.description}</p>\r\n    </div>\r\n</div>\r\n<div id=\"playlist_results_links\">\r\n    <ul id=\"playlistLinksList\">\r\n        <li id=\"openSpotifyButton\" class=\"playlistLinks\">Save on Spotify</li>\r\n        <li id=\"goBackButton\" class=\"playlistLinks\"><a href=\"./introPageGenerator.html\">Go back</a></li>\r\n    </ul>\r\n</div>\r\n    `\r\n    titlepage.innerHTML = \"The playlist for you\"\r\n    containerResult.innerHTML = html;\r\n    containerResult.style.display = \"block\";\r\n\r\n    //add functions to open spotify button\r\n    let spotifyOpenButtons = document.getElementById(\"openSpotifyButton\");\r\n    spotifyOpenButtons.addEventListener(\"click\", function () {\r\n        if (spotifyOpenButtons.innerHTML == \"Playlist saved!\") {\r\n            alert(\"The playlist was already saved!\")\r\n        } else {\r\n            spotifyOpenButtons.classList.remove(\"playlistLinks\");\r\n            spotifyOpenButtons.innerHTML = \"Playlist saved!\"\r\n            callSpotifyAPI(oneChosenPlaylist);\r\n        }\r\n    })\r\n}\r\n\r\nfunction callSpotifyAPI(chosenPlaylist) {\r\n    console.log(\"Calling API...\")\r\n    _apiCall_js__WEBPACK_IMPORTED_MODULE_1__.createPlaylistForUser(chosenPlaylist);\r\n}\n\n//# sourceURL=webpack://web2-frontend-casdebruijnehb/./src/playlistGenerator.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/playlistGenerator.js");
/******/ 	
/******/ })()
;